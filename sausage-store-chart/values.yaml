global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-bonus2k.2sem.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: bonus2k/sausage-store-frontend
  version: "1.0"
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgres:5432/sausage-store
    postgresUser: user
    postgresPassword: password
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
  ### Опишите стратегию RollingUpdate для бэкенда
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  image: bonus2k/sausage-store-backend
  version: "1.0"
  imagePullPolicy: Always
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  containerPort: 8080
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
  vpa:
  ### Опишите VPA для бэкенда
    updatePolicy:
      updateMode: "Auto"
    resourcePolicy:
      containerPolicies:
        - containerName: "*"
          minAllowed:
            cpu: "100m"
            memory: "128Mi"
          maxAllowed:
            cpu: "1"
            memory: "512Mi"

backend-report:
### Опишите значения для backend-report
### Приложение должно использовать стратегию Recreate
### Приложение использует переменную PORT - порт, на котором оно запустится и DB - Uri-подключение к mongodb. 
### DB положите в Secret, PORT в ConfigMap
### Опишите HPA для backend-report
  env:
    mongodbUri: mongodb://root:rootpassword@mongodb:27017
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  image: bonus2k/sausage-store-backend-report
  version: "1.0"
  imagePullPolicy: Always
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  containerPort: 8080
  livenessProbe:
  hpa:
    averageUtilization: 50
    minReplicas: 1
    maxReplicas: 3


infra:
  postgresql:
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    containerPort: 5432
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "500m"
  ### Опишите необходимые переменные для развертывания PostgresQL в кластере Kubernetes
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    containerPort: 27017
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "500m"
