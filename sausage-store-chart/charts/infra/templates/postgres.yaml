apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  annotations:
    helm.sh/hook-weight: "-5"
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        envFrom:
          - configMapRef:
              name: postgres-conf
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.secret.postgresUsername.name }}
                key: {{ .Values.postgresql.secret.postgresUsername.key }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.secret.postgresPassword.name }}
                key: {{ .Values.postgresql.secret.postgresPassword.key }}
        ports:
        - containerPort: {{ .Values.postgresql.containerPort }}
        resources:
{{ toYaml .Values.postgresql.resources | indent 12 }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: {{ .Values.postgresql.containerPort }}
    targetPort: {{ .Values.postgresql.containerPort }}
  selector:
    app: postgres
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-conf
data:
  POSTGRES_DB: {{ .Values.postgresql.env.POSTGRES_DB }}
  PGDATA: "/var/lib/postgresql/data/pgdata"